// Extensions.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import XCTest
import WWFoundation
import SwaggerClient

class SwaggerTest: XCTestCase {
{{#apiInfo}}{{#apis}}
	func test{{classFilename}}Success() {
        class MockAPI: HTTP { {{#operations}}{{#operation}}
            override func {{lowercaseHttpMethod}}(path: String, parameters: [String:AnyObject]? = nil, encoding: ParameterRepresentation = .url, headers: [String:String]? = nil, responseType: HTTPConnection.ResponseType = .responseJSON, useCache: Bool = false, completion: @escaping HTTPConnection.RequestCompleteHandler) {
                let stringURL = "https://www.fakeUrl.com"
                let url = URL(string: stringURL)!
                let request = URLRequest(url: url)
                let response = HTTPURLResponse(url: url, mimeType: "", expectedContentLength: 0, textEncodingName: "")
                completion(request, response, SwaggerMockModel.mock{{returnType}}JsonObject(), nil)
            }{{/operation}}{{/operations}}
        }
        
        let mockAPI = MockAPI(serviceType: ServiceType.http) // ServiceType is just a placeholder it will not be used
        {{#operations}}{{#operation}}
        {{classname}}.{{operationId}}(urlParameters: "path", bodyParameters: nil, service: mockAPI, headers: nil) { (response, error) in
            XCTAssertNil(error, "There should not be an error.")
            XCTAssertNotNil(response, "expected {{returnType}}, but found nil.")
        }
        {{/operation}}{{/operations}}
    }
{{/apis}}{{/apiInfo}}	
}